// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package echo_errors

import (
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

func NewCommonEchoError_COMMON_ERROR1Error(msg string) (err error) {
	err = status.Errorf(codes.Code(100001), msg)
	return err
}

func IsCommonEchoError_COMMON_ERROR1Error(err error) bool {
	status := status.Convert(err)
	if status == nil {
		return false
	}
	return status.Code() == codes.Code(100001)
}

func NewCommonEchoError_COMMON_ERROR2Error(msg string) (err error) {
	err = status.Errorf(codes.Code(100002), msg)
	return err
}

func IsCommonEchoError_COMMON_ERROR2Error(err error) bool {
	status := status.Convert(err)
	if status == nil {
		return false
	}
	return status.Code() == codes.Code(100002)
}

func NewCommonEchoError_COMMON_ERROR3Error(msg string) (err error) {
	err = status.Errorf(codes.Code(100003), msg)
	return err
}

func IsCommonEchoError_COMMON_ERROR3Error(err error) bool {
	status := status.Convert(err)
	if status == nil {
		return false
	}
	return status.Code() == codes.Code(100003)
}

func NewCommonEchoError_COMMON_ERROR4Error(msg string) (err error) {
	err = status.Errorf(codes.Code(100004), msg)
	return err
}

func IsCommonEchoError_COMMON_ERROR4Error(err error) bool {
	status := status.Convert(err)
	if status == nil {
		return false
	}
	return status.Code() == codes.Code(100004)
}
