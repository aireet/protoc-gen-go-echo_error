package main

import (
	"github.com/aireet/protoc-gen-go-echo_error/echoerr"
	"google.golang.org/protobuf/compiler/protogen"
	"google.golang.org/protobuf/types/pluginpb"
)

const (
	fmtPackage        = protogen.GoImportPath("fmt")
	grpcCodesPackage  = protogen.GoImportPath("google.golang.org/grpc/codes")
	grpcStatusPackage = protogen.GoImportPath("google.golang.org/grpc/status")
)

func main() {
	protogen.Options{}.Run(func(plugin *protogen.Plugin) error {
		plugin.SupportedFeatures = uint64(pluginpb.CodeGeneratorResponse_FEATURE_PROTO3_OPTIONAL)
		for _, f := range plugin.Files {
			if !f.Generate {
				continue
			}
			generateFile(plugin, f)
		}
		return nil
	})
}

func generateFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {

	filename := string(*file.Proto.Name) + ".error.go"

	g := gen.NewGeneratedFile(filename, "")
	g.P("// Code generated by protoc-gen-go-errors. DO NOT EDIT.")
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()

	echoerr.GenError(g, file)

	g.QualifiedGoIdent(grpcCodesPackage.Ident(""))
	g.QualifiedGoIdent(grpcStatusPackage.Ident(""))
	return g
}
